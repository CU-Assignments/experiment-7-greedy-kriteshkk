class TreeNode {
    int val;
    TreeNode left, right;

    TreeNode(int x) {
        val = x;
        left = right = null;
    }
}

class Solution {
    int maxSum;

    public int maxPathSum(TreeNode root) {
        maxSum = Integer.MIN_VALUE;
        findMaxPath(root);
        return maxSum;
    }

    private int findMaxPath(TreeNode node) {
        if (node == null) return 0;

        int leftMax = Math.max(0, findMaxPath(node.left));
        int rightMax = Math.max(0, findMaxPath(node.right));

        maxSum = Math.max(maxSum, leftMax + rightMax + node.val);

        return Math.max(leftMax, rightMax) + node.val;
    }

    public static void main(String[] args) {
        Solution sol = new Solution();

        
        TreeNode root = new TreeNode(-10);
        root.left = new TreeNode(9);
        root.right = new TreeNode(20);
        root.right.left = new TreeNode(15);
        root.right.right = new TreeNode(7);

        System.out.println("Maximum Path Sum: " + sol.maxPathSum(root)); // Output: 42
    }
}
